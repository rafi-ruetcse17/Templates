//given a string of digits. how many substrings are divisible by 2019?
#include<bits/stdc++.h>
using namespace std;
const int mod=2019;
int main()
{
    string s;
    vector<int>cnt_suf(mod,0);
    cin >> s;
    int n = s.size();
    int power_of_ten =1;
    int suf=0;
    cnt_suf[suf]++;
    long long ans =0;

    for(int i=n-1;i>=0;i--)
    {
        int digit = s[i]-'0';
        suf=(suf+digit*power_of_ten)%mod;
        power_of_ten = (10*power_of_ten)%mod;
        ans+=cnt_suf[suf];
        cnt_suf[suf]++;
    }

    cout << ans << endl;
}
