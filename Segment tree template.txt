#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mx 200005
int tree[4*mx], a[200005];
int n , q;
void build(int node, int lo, int hi){
    if(lo==hi){
        tree[node] = a[lo];
        return;
    }
    int mid = (lo+hi)>>1;
    int left = 2*node, right = left+1;
    build(left, lo, mid);
    build(right, mid+1, hi);

    tree[node] = tree[left]+tree[right];
}

void update(int node, int lo, int hi, int i, int j, int val){
    if(lo>j || hi<i)
        return;
    if(lo>=i&&hi<=j){
        tree[node] = val;
        return ;
    }

    int mid = (lo+hi)>>1;
    int left = 2*node, right = left+1;
    update(left, lo, mid, i, j, val);
    update(right, mid+1, hi, i, j, val);

    tree[node] = tree[left]+tree[right];

}

int query(int node, int lo, int hi, int i, int j){
    if(lo>j || hi<i)
        return 0;
    if(lo>=i&&hi<=j){
        return tree[node];
    }

    int mid = (lo+hi)>>1;
    int left = 2*node, right = left+1;
    int p = query(left, lo, mid, i, j);
    int q = query(right, mid+1, hi, i, j);

    return p+q;
}
